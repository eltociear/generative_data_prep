{"prompt": "", "completion": "From the mid-1960's until the close of that decade, automobiles became lighter, more compact, and more powerful. Auto manufacturers continued to compete against one another for drag-strip supremacy. As government regulations and safety concerns increased, the muscle car era began to decline rapidly.\nMany of these ultimate high-performance muscle cars were built to satisfy homologation requirements. Others were built just to have the fastest machine on the road. The Plymouth Hemi 'Cuda is an example of one of the fiercest and most powerful vehicle ever constructed for the roadway. It was derived from the lesser Barracuda's which began in the mid-1960's. It was built atop the 'E' body platform and was restyled in 1970 by John Herlitz, making it longer, wider, and lower. The 426 cubic-inch Hemi V8 was capable of producing an astonishing 425 horsepower. Matted to a four-speed manual 833 transmission, this was the ultimate muscle car of its day.\nThis 'Cuda Convertible was given a show-quality restoration to original specifications and is one of just 374 examples originally produced for the 1971 model year. It is believed to be one of just 87 383-powered convertibles produced for the last year of 'Cuda convertible production in 1971. The 383 cubic-inch V8 has four-barrel carburetors and is capable of producing 300 horsepower. There is a TorqueFlite three-speed automatic gearbox and four-wheel hydraulic brakes.\nThe car is finished in Tawny Gold, with a white interior and a white power-operated convertible top. Features include dual chrome-tipped exhaust outlets, floor console, hood pins, power brakes, power steering, Rallye wheels, a 'Slap Stik' shifter and a 'Tuff' steering wheel.\nThe 3rd generation Barracuda ran from 1970 through 1974; the previous generations were A-body Valiant based which began in 1964. Designed by John E. Herlitz on the 108-inch wheelbase, unibody, E-platform, a shorter and wider version of the existing B-body. This example has the non-Hemi 340 cubic-inch V8 with automatic and it is a stock example. 1971 was the only year for four headlamps. Somehow, this model series didn't sell to expectation and production slowed over the years, making the cars quite rare today. An unaltered car is even more rare.\nThe writing was on the wall by 1971 for the muscle car enthusiast. With rising gas prices and skyrocketing insurance rates, the days of the overpowered and often low priced performance automobile were numbered. For the big three, it seems that the decision was made to go out with a bang, and some of the rarest and most desirable muscle cars ever to come out of the Motor City were produced.\nAmong the hottest is the Hemi 'Cuda, produced for a mere two model years. In 1970, it is believed that Plymouth produced just 696 Hemi 'Cuda hardtops and for 1971, a mere 118 would leave the line.\nWild colors would survive for the 1971 model year and Chrysler would lead the pack with their Hi-Impact color palate. Several eye popping colors were offered, including Sassy Grass Green as seen on this example, which is one of the rarest offerings.\nWhen it comes to American Muscle, the Plymouth hemi 'Cuda is always at the top of the list. And when it comes to rarity and desirability, nothing compares to a 1971 Hemi ' Cuda.\nNo matter what make or model you may prefer, there is no disputing the visual impact of the 426 Street Hemi engine. With the massive valve covers and the huge dual quad carbs, it certainly takes top honors when it comes to intimidation. To add the outrageous FC7 in Violet, (aka Plum Crazy) paint to the mix is to take things a step beyond.\nThis 1971 Hemi 'Cuda exemplifies what Mopar Performance was all about in the final years of the original Muscle Car era. With a mere 107 leaving the Hamtramck, Michigan assembly plant with the Hemi engine under the shaker hood, these cars were rare even when new. This car is one of just 48 equipped with the Torqueflite automatic transmission and it also features the rare leather interior, elastomeric color keyed bumpers, power steering and power front disc brakes, a center console, the AM radio with the Dictaphone cassette recorder, tinted glass, dual color keyed mirrors and more, making it one of the highest option 1971 Hemi 'Cuda's in existence.\nOf course, when new these cars were flogged not only on the street, but at the tracks throughout the country, making this example among the most sought after and valuable American muscle cars ever built.\nThe first series of the Barracuda was produced from 1964 through 1969, distinguished by its A-body construction. From 1970 through 1974 the second series was produced using an E-body construction.\nIn 1964, Plymouth offered the Barracuda as an option of the Valiant model line, meaning it wore both the Valiant and Barracuda emblems. The base offering was a 225 cubic-inch six-cylinder engine that produced with 180 horsepower. An optional Commando 273 cubic-inch eight-cylinder engine was available with a four-barrel carburetor, high-compression heads and revised cams. The vehicle was outfitted with a live rear axle and semi-elliptic springs. Unfortunately, the Barracuda was introduced at the same time, separated by only two weeks, as the Ford Mustang. The Mustang proved to be the more popular car outselling the Valiant Barracuda by a ratio of 8 to 1.\nThe interior was given a floor-shifter, vinyl semi-bucket seats, and rear seating. The rear seats folded down allowing ample space for cargo.\nBy 1967, Plymouth redesigned the Barracuda and added a coupe and convertible to the model line-up. To accommodate larger engines, the engine bay was enlarged. There were multiple engine offerings that ranged in configuration and horsepower ratings. The 225 cubic-inch six-cylinder was the base engine while the 383 cubic-inch 8-cylinder was the top-of-the-line producing 280 horsepower. That was impressive, especially considering the horsepower to weight ratio. Many chose the 340 cubic-inch eight-cylinder because the 383 and Hemi were reported to make the Barracuda nose-heavy while the 340 offered optimal handling.\nIn 1968 Plymouth offered a Super Stock 426 Hemi package. The lightweight body and race-tuned Hemi were perfect for the drag racing circuit. Glass was replaced with lexan, non-essential items were removed, and lightweight seats with aluminum brackets replaced the factory bench, and were given a sticker that indicated the car was not to be driven on public highways but for supervised acceleration trials. The result was a car that could run the quarter mile in the ten-second range.\nFor 1969 a limited number of 440 Barracudas were produced, giving the vehicle a zero-to-sixty time of around 5.6 seconds.\nScottsdale, Arizona (July 18th, 2015) \u2013 Thomas Scott is an accountant and entrepreneur from Athens, Georgia who has had a love for all things automotive for as long as he can remember. He possesses a lifetime of passion for buying, selling and working on classic American cars."}
{"prompt": "", "completion": "Seven Sumatran rhinos have been captured on hidden cameras in an Indonesian national park where the critically endangered species was feared extinct, a conservationist said Thursday.\nThe Sumatran rhino had not been sighted in the Mount Leuser National Park on the northern tip of Sumatra for 26 years, the project's team leader Tarmizi of the Leuser International Foundation said.\n\"This discovery can allay doubts over the rhino's presence in the park,\" Tarmizi told AFP, adding he hoped the discovery would encourage more efforts to conserve the species.\nImages of the rhinos were captured by 28 infrared cameras set up between June 2011 and April this year and confirmed six female and one male rhino appearing in 1,000 photo frames.\nThe Sumatran rhino population has dropped 50 percent over the past 20 years, and there are now believed to be fewer than 200 left in the world.\nThe rhinos are commonly targeted by poachers and rampant illegal logging has destroyed much of their habitat."}
{"prompt": "", "completion": "It is done, and submitted. You can play \u201cSurvival of the Tastiest\u201d on Android, and on the web. Playing on the web works, but you have to simulate multi-touch for table moving and that can be a bit confusing.\nThere\u2019s a lot I\u2019d like to talk about. I\u2019ll go through every topic, insted of making the typical what went right/wrong list.\nWorking over the theme was probably one of the hardest tasks I had to face.\nOriginally, I had an idea of what kind of game I wanted to develop, gameplay wise \u2013 something with lots of enemies/actors, simple graphics, maybe set in space, controlled from a top-down view. I was confident I could fit any theme around it.\nIn the end, the problem with a theme like \u201cEvolution\u201d in a game is that evolution is unassisted. It happens through several seemingly random mutations over time, with the most apt permutation surviving. This genetic car simulator is, in my opinion, a great example of actual evolution of a species facing a challenge. But is it a game?\nIn a game, you need to control something to reach an objective. That control goes against what evolution is supposed to be like. If you allow the user to pick how to evolve something, it\u2019s not evolution anymore \u2013 it\u2019s the equivalent of intelligent design, the fable invented by creationists to combat the very idea of evolution. Being agnostic and a Pastafarian, that\u2019s not something that rubbed me the right way.\nHence, my biggest dillema when deciding what to create was not with what I wanted to create, but with what I did not. I didn\u2019t want to create an \u201cintelligent design\u201d simulator and wrongly call it evolution.\nThis is a problem, of course, every other contestant also had to face. And judging by the entries submitted, not many managed to work around it. I\u2019d say the only real solution was through the use of artificial selection, somehow. So far, I haven\u2019t seen any entry using this at its core gameplay.\nAlas, this is just a fun competition and after a while I decided not to be as strict with the game idea, and allowed myself to pick whatever I thought would work out.\nMy initial idea was to create something where humanity tried to evolve to a next level but had some kind of foe trying to stop them from doing so. I kind of had this image of human souls flying in space towards a monolith or a space baby (all based in 2001: A Space Odyssey of course) but I couldn\u2019t think of compelling (read: serious) mechanics for that.\nBorgs were my next inspiration, as their whole hypothesis fit pretty well into the evolution theme. But how to make it work? Are you the borg, or fighting the Borg?\nThe third and final idea came to me through my girlfriend, who somehow gave me the idea of making something about the evolution of Pasta. The more I thought about it the more it sounded like it would work, so I decided to go with it.\nConversations with my inspiring co-worker Roushey (who also created the \u201cMechanical Underdogs\u201d signature logo for my intros) further matured the concept, as it involved into the idea of having individual pieces of pasta flying around and trying to evolve until they became all-powerful. A secondary idea here was that the game would work to explain how the Flying Spaghetti Monster came to exist \u2013 by evolving from a normal dinner table.\nSo the idea evolved more or less into this: you are sitting a table. You have your own plate, with is your \u201cbase\u201d. There are 5 other guests at the table, each with their own plate.\nYour plate can spawn little pieces of pasta. You do so by \u201cordering\u201d them through a menu. Some pastas are better than others; some are faster, some are stronger. They have varying costs, which are debited from your credits (you start with a number of credits).\nOnce spawned, your pastas start flying around. Their instinct is to fly to other plates, in order to conquer them (the objective of the game is having your pasta conquer all the plates on the table). But they are really autonomous, so after being spawned, you have no control over your pasta (think DotA or LoL creeps).\nOnce a pasta is in the vicinity of a plate, it starts conquering it for its team. It takes around 10 seconds for a plate to be conquered; less if more pasta from the same team are around. If pasta from other team are around, though, they get locked down in their attempt, unable to conquer the plate, until one of them die (think Battlefield\u2019s standard \u201cConquest\u201d mode).\nYou get points every second for every plate you own.\nOver time, the concept also evolved to use an Italian bistro as its main scenario.\nNo major changes were made from my work setup. I used FDT and Starling creating an Adobe AIR (ActionScript) project, all tools or frameworks I already had some knowledge with.\nOne big change for me was that I livestreamed my work through a twitch.tv account. This was a new thing for me. As recommended by Roushey, I used a program called XSplit and I got to say, it is pretty amazing. It made the livestream pretty effortless and the features are awesome, even for the free version. It was great to have some of my friends watch me, and then interact with them and random people through chat. It was also good knowing that I was also recording a local version of the files, so I could make a timelapse video later.\nKnowing the video was being recorded also made me a lot more self-conscious about my computer use, as if someone was watching over my shoulder. It made me realize that sometimes I spend too much time in seemingly inane tasks (I ended up wasting the longest time just to get some text alignment the way I wanted \u2013 it\u2019ll probably drive someone crazy if they watch it) and that I do way too many typos where writing code. I pretty much spend half of the time writing a line and the other half fixing the crazy characters in it.\nMy own stream was probably boring to watch since I was coding for the most time. But livestreaming is one of the cool things to do as a spectator too. It was great seeing other people working \u2013 I had a few tabs opened on my second monitor all the time. It\u2019s actually a bit sad, because if I could, I could have spent the whole weekend just watching other people working! But I had to do my own work, so I\u2019d only do it once in a while, when resting for a bit.\nAlthough I wanted some simple, low-fi, high-contrast kind of design, I ended up going with somewhat realistic (vector) art. I think it worked very well, fitting the mood of the game, but I also went overboard.\nFor example: to know the state of a plate (who owns it, who\u2019s conquering it and how much time they have left before conquering it, which pasta units are in the queue, etc), you have to look at the plate\u2019s bill.\nThe problem I realized when doing some tests is that people never look at the bill! They think it\u2019s some kind of prop, so they never actually read its details.\nPlus, if you\u2019re zoomed out too much, you can\u2019t actually read it, so it\u2019s hard to know what\u2019s going on with the game until you zoom in to the area of a specific plate.\nOne other solution that didn\u2019t turn out to be as perfect as I thought was how to indicate who a plate base belongs to. In the game, that\u2019s indicated by the plate\u2019s decoration \u2013 its color denotes the team owner. But it\u2019s something that fits so well into the design that people never realized it, until they were told about it.\nIn the end, the idea of going with a full physical metaphor is one that should be done with care. Things that are very important risk becoming background noise, unless the player knows its importance.\nOriginally, I wanted to avoid any kind of heads-up display in my game. In the end, I ended up adding it at the bottom to indicate your credits and bases owned, as well as the hideous out-of-place-and-still-not-obvious \u201cCall Waiter\u201d button. But in hindsight, I should have gone with a simple HUD from the start, especially one that indicated each team\u2019s colors and general state of the game without the need for zooming in and out.\nDevelopment went fast. But not fast enough.\nEven though I worked around 32+ hours for this Ludum Dare, the biggest problem I had to face in the end was overscoping. I had too much planned, and couldn\u2019t get it all done.\nContent-wise, I had several kinds of pasta planned (Wikipedia is just amazing in that regard), split into several different groups, from small Pastina to huge Pasta al forno. But because of time constraints, I ended up scratching most of them, and ended up with 5 different types of very small pasta \u2013 barely something to start when talking about the evolution of Pasta.\nWhich is one of the saddest things about the project, really. It had the framework and the features to allow an endless number of elements in there, but I just didn\u2019t have time to draw the rest of the assets needed (something I loved to do, by the way).\nOther non-obvious features had to be dropped, too. For example, when ordering some pasta, you were supposed to select what kind of sauce you\u2019d like with your pasta, each with different attributes. Bolognese, for example, is very strong, but inaccurate; Pesto is very accurate and has great range, but it\u2019s weaker; and my favorite, Vodka, would triggers 10% loss of speed on the pasta hit by it.\nThe code for that is mostly in there. But in the end, I didn\u2019t have time to implement the sauce selection interface; all pasta ended up using bolognese sauce.\nActual programming also took a toll in the development time. Having been programming for a while, I like to believe I got to a point where I know how to make things right, but at the expense of forgetting how to do things wrong in a seemingly good way. What I mean is that I had to take a lot of shortcuts in my code to save time (e.g. a lot of singletons references for cross-communication rather than events or observers, all-encompassing check loops, not fast enough) that left a very sour taste in my mouth. While I know I used to do those a few years ago and survive, I almost cannot accept the state my code is in right now.\nAt the same time, I do know it was the right thing to do given the timeframe.\nOne small thing that had some impact was using a somewhat new platform for me. That\u2019s Starling, the accelerated graphics framework I used in Flash. I had tested it before and I knew how to use it well \u2013 the API is very similar to Flash itself. However, there were some small details that had some impact during development, making me feel somewhat uneasy the whole time I was writing the game. It was, again, the right thing to do, but I should have used Starling more deeply before (which is the conundrum: I used it for Ludum Dare just so I could learn more about it).\nOne final aspect of the game that I learned is that making the game obvious for your players goes a long way into making it fun. If you have to spend the longest time explaining things, your game is doing something wrong.\nAnd that\u2019s exactly the problem Survival of the Tastiest ultimately faced. It\u2019s very hard for people to understand what\u2019s going on with the game, why, and how. I did have some introductory text at the beginning, but that was a last-minute thing. More importantly, I should have had a better interface or simplified the whole concept so it would be easier for people to understand.\nThat doesn\u2019t mean the game itself should be simple. It just means that the experience and interface should be approachable and understandable.\nI\u2019m extremely happy with what I\u2019ve done and, especially given that this was my first Ludum Dare. However, I feel like I\u2019ve learned a lot of what not to do.\nThe biggest problem is overscoping. Like Eric Decker said, the biggest lesson we can learn with this is probably with scoping \u2013 deciding what to do beforehand in a way you can complete it without having to rush and do something half-assed.\nI\u2019m sure I will do more Ludum Dares in the future. But if there are any lessons I can take of it, they are to make it simple, to use frameworks and platforms you already have some absolute experience with (otherwise you\u2019ll spend too much time trying to solve easy questions), and to scope for a game that you can complete in one day only (that way, you can actually take two days and make it cool).\non Monday, August 27th, 2012 at 10:54 am and is filed under LD #24.\nYou can follow any responses to this entry through the RSS 2.0 feed.\nYou can skip to the end and leave a response. Pinging is currently not allowed."}
